// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Inventory.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace InventoryService.Protos {
  public static partial class InventoryManagement
  {
    static readonly string __ServiceName = "InventoryManagement";

    static readonly grpc::Marshaller<global::InventoryService.Protos.InventoryItem> __Marshaller_InventoryItem = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::InventoryService.Protos.InventoryItem.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::InventoryService.Protos.ReplyMessage> __Marshaller_ReplyMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::InventoryService.Protos.ReplyMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::InventoryService.Protos.DroppedItem> __Marshaller_DroppedItem = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::InventoryService.Protos.DroppedItem.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::InventoryService.Protos.ItemObtainedMessage> __Marshaller_ItemObtainedMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::InventoryService.Protos.ItemObtainedMessage.Parser.ParseFrom);

    static readonly grpc::Method<global::InventoryService.Protos.InventoryItem, global::InventoryService.Protos.ReplyMessage> __Method_DropItem = new grpc::Method<global::InventoryService.Protos.InventoryItem, global::InventoryService.Protos.ReplyMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DropItem",
        __Marshaller_InventoryItem,
        __Marshaller_ReplyMessage);

    static readonly grpc::Method<global::InventoryService.Protos.DroppedItem, global::InventoryService.Protos.ItemObtainedMessage> __Method_GetItem = new grpc::Method<global::InventoryService.Protos.DroppedItem, global::InventoryService.Protos.ItemObtainedMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetItem",
        __Marshaller_DroppedItem,
        __Marshaller_ItemObtainedMessage);

    static readonly grpc::Method<global::InventoryService.Protos.InventoryItem, global::InventoryService.Protos.ItemObtainedMessage> __Method_TradeItem = new grpc::Method<global::InventoryService.Protos.InventoryItem, global::InventoryService.Protos.ItemObtainedMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TradeItem",
        __Marshaller_InventoryItem,
        __Marshaller_ItemObtainedMessage);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::InventoryService.Protos.InventoryReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of InventoryManagement</summary>
    [grpc::BindServiceMethod(typeof(InventoryManagement), "BindService")]
    public abstract partial class InventoryManagementBase
    {
      public virtual global::System.Threading.Tasks.Task<global::InventoryService.Protos.ReplyMessage> DropItem(global::InventoryService.Protos.InventoryItem request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::InventoryService.Protos.ItemObtainedMessage> GetItem(global::InventoryService.Protos.DroppedItem request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::InventoryService.Protos.ItemObtainedMessage> TradeItem(global::InventoryService.Protos.InventoryItem request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(InventoryManagementBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_DropItem, serviceImpl.DropItem)
          .AddMethod(__Method_GetItem, serviceImpl.GetItem)
          .AddMethod(__Method_TradeItem, serviceImpl.TradeItem).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, InventoryManagementBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_DropItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::InventoryService.Protos.InventoryItem, global::InventoryService.Protos.ReplyMessage>(serviceImpl.DropItem));
      serviceBinder.AddMethod(__Method_GetItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::InventoryService.Protos.DroppedItem, global::InventoryService.Protos.ItemObtainedMessage>(serviceImpl.GetItem));
      serviceBinder.AddMethod(__Method_TradeItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::InventoryService.Protos.InventoryItem, global::InventoryService.Protos.ItemObtainedMessage>(serviceImpl.TradeItem));
    }

  }
}
#endregion
